{
  "caption": "Взаимодействие с сервером",
  "url": "server-interaction",
  "themes": [
    {
      "title": "Основные сетевые протоколы",
      "text": "Hello world",
      "subThemes": [
        {
          "title": "HTTP and HTTPS",
          "text": "Протокол приложения HTTP (hypertext transfer protocol)  лежит в основе работы всех сайтов в Сети. HTTP дает возможность запрашивать необходимые ресурсы у удаленной системы, например, веб страницы и файлы. HTTPS это расширение протокола HTTP для поддержки шифрования в целях повышения безопасности"
        },
        {
          "title": "FTP",
          "text": "FTP (file transfer protocol) - используется для передачи данных. Функционирует на уровне приложений, чем обеспечивается передача файла от одного компьютера к другому. FTP по праву считается небезопасным, его не стоит применять для передачи личных данных."
        },
        {
          "title": "DNS",
          "text": "DNS (domain name system) - используется для преобразования понятных и легко читаемых адресов в сложные ip адреса, которые трудно запомнить и наоборот. С помощью DNS мы получаем доступ к интернет-ресурсу по его доменному имени."
        },
        {
          "title": "SSH",
          "text": "SSH (secure shell) также относится к протоколу уровня приложений. Он разработан для  обеспечения удаленного управления системой по защищенному каналу. Этот протокол используется для работы многих дополнительных технологий. Более подробно о протоколах передачи файлов в предыдущей статьи."
        },
        {
          "title": "MAC",
          "text": "MAC (Media Access Control) - это протокол низкого уровня. Его применяют в качестве идентификации устройств в локальной сети. Каждое устройство, которое подключено к Интернету имеет свой уникальный MAC адрес. Этот адрес задан производителем. Это протокол уровня соединения, с которым довольно часто приходится сталкиваться каждому пользователю."
        },
        {
          "title": "IP",
          "text": "IP (Internet Protocol) по сравнению с MAC, располагается на уровень выше. IP адреса  уникальны для каждого устройства и дают возможность компьютерам находить и определять друг друга в сети. IP принадлежит сетевому уровню модели TCP/IP."
        }
      ]
    },
    {
      "title": "Чтение Json схем",
      "text": "JSON Schema - это словарь, который позволяет аннотировать и проверять документы JSON. Документ JSON, который проверяется или описывается, мы называем экземпляром , а документ, содержащий описание, называется схемой .",
      "subThemes": [
        {
          "title": "Самая базовая схема",
          "text": " - это пустой объект JSON, который ничего не ограничивает, разрешает все и ничего не описывает. Вы также можете использовать true вместо пустого объекта для представления схемы, которая соответствует чему-либо, или false для схемы, которая ничего не соответствует.",
          "code": "{} || true"
        },
        {
          "title": "Строчный тип",
          "text": "В следующем случае принимаются только строки:",
          "code": "{ \"type\": \"string\" }"
        },
        {
          "title": "Ограничение строк minLength и maxLength",
          "text": "Длина строки может быть ограничена использованием minLength и maxLength ключевых слов. Для обоих ключевых слов значение должно быть неотрицательным числом.",
          "code": "{\n  \"type\": \"string\",\n  \"minLength\": 2,\n  \"maxLength\": 3\n}"
        },
        {
          "title": "",
          "text": "Используется ключевое слово, чтобы ограничить строку определенного регулярного выражения.",
          "code": "{\n  \"type\": \"string\",\n  \"minLength\": 2,\n  \"maxLength\": 3\n}"
        },
        {
          "title": "",
          "text": "Тип используется для любого числового типа, либо целые числа или числа с плавающей точкой.",
          "code": "{ \"type\": \"number\" }"
        },
        {
          "title": "",
          "text": "Объекты являются типом отображения в JSON. Они сопоставляют «ключи» с «ценностями». В JSON «ключи» всегда должны быть строками. Каждая из этих пар условно называется «свойством»",
          "code": "{ \"type\": \"object\" }"
        },
        {
          "title": "",
          "text": "Свойства (пары ключ-значение) объекта определяются с помощью properties ключевого слова. Значением properties является объект, где каждый ключ - это имя свойства, а каждое значение - схема JSON, используемая для проверки этого свойства.",
          "code": "{  \"type\": \"object\",\n  \"properties\": {\n    \"number\":      { \"type\": \"number\" },\n    \"street_name\": { \"type\": \"string\" },\n  }\n  }\n}"
        },
        {
          "title": "",
          "text": "additionalPropertiesКлючевое слово используется для управления обработкой дополнительного материала, то есть свойства, имена которых не указаны в properties ключевом слове. По умолчанию любые дополнительные свойства разрешены.",
          "code": "{  \"type\": \"object\",\n  \"properties\": {\n    \"number\":      { \"type\": \"number\" },\n    \"street_name\": { \"type\": \"string\" },\n  }\n  }, additionalProperties\": false \n}"
        },
        {
          "title": "",
          "text": "Если additionalProperties это объект, то этот объект является схемой, которая будет использоваться для проверки любых дополнительных свойств, не перечисленных в properties.",
          "code": "{  \"type\": \"object\",\n  \"properties\": {\n    \"number\":      { \"type\": \"number\" },\n    \"street_name\": { \"type\": \"string\" },\n  }\n  }, additionalProperties\": { \"type\": \"string\" } \n}"
        },
        {
          "title": "По умолчанию свойства, определяемые properties ключевым словом, не являются обязательными. Тем не менее, можно предоставить список обязательных свойств, используя required ключевое слово.\n\nrequiredКлючевое слово принимает массив из нуля или более строк. Каждая из этих строк должна быть уникальной.",
          "text": "",
          "code": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\":      { \"type\": \"string\" },\n    \"email\":     { \"type\": \"string\" },\n    \"address\":   { \"type\": \"string\" },\n    \"telephone\": { \"type\": \"string\" }\n  },\n  \"required\": [\"name\", \"email\"]\n}"
        },
        {
          "title": "Продолжить с миссивами",
          "text": "Продолжить с миссивами",
          "code": "{ \"type\": \"array\" }"
        }
      ],
      "sources": ["https://json-schema.org/"]
    },
    {
      "title": "Cookie, localstoradge и их различия",
      "text": "Cookie, localstoradge и их различия",
      "subThemes": []
    },
    {
      "title": "Proxy and so on",
      "text": "Proxy and so on",
      "subThemes": []
    },
    {
      "title": "socket and so on",
      "text": "socket and so on",
      "subThemes": []
    },
    {
      "title": "Запросы и их различия",
      "text": "Запросы и их различия",
      "subThemes": []
    },
    {
      "title": "Статусы ответов сервера",
      "text": "Запросы и их различия",
      "subThemes": [
        {
          "title": "100 - Промежуточный ответ",
          "text": "Означает, что запрос был успешно получен и идёт его обработка"
        },
        {
          "title": "200 - Запрос выполнен успешно",
          "text": "Запрос был получен и успешно обработан сервером. Исходя из статуса, сервер может предоставлять тело и заголовок сообщения."
        },
        {
          "title": "300 - Перенаправление (редирект)",
          "text": "Последующие действия должны быть предприняты для выполнения запроса."
        },
        {
          "title": "400 - Ошибка на стороне клиент",
          "text": "Запрос содержит синтаксическую ошибку, либо не корректен"
        },
        {
          "title": "500 - Ошибка на стороне сервера",
          "text": "Сервер не может выполнить обработать корректный запрос"
        }
      ]
    }
  ]
}